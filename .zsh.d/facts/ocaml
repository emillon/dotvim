1   Suspicious-looking start-of-comment mark. 
2   Suspicious-looking end-of-comment mark. 
3   Deprecated feature. 
4   Fragile pattern matching: matching that will remain complete even if additional constructors are added to one of the variant types matched. 
5   Partially applied function: expression whose result has function type and is ignored. 
6   Label omitted in function application. 
7   Method overridden. 
8   Partial match: missing cases in pattern-matching. 
9   Missing fields in a record pattern. 
10  Expression on the left-hand side of a sequence that doesn’t have type unit (and that is not a function, see warning number 5). 
11  Redundant case in a pattern matching (unused match case). 
12  Redundant sub-pattern in a pattern-matching. 
13  Instance variable overridden. 
14  Illegal backslash escape in a string constant. 
15  Private method made public implicitly. 
16  Unerasable optional argument. 
17  Undeclared virtual method. 
18  Non-principal type. 
19  Type without principality. 
20  Unused function argument. 
21  Non-returning statement. 
22  Proprocessor warning. 
23  Useless record with clause. 
24  Bad module name: the source file name is not a valid OCaml module name. 
25  Pattern-matching with all clauses guarded. Exhaustiveness cannot be checked. 
26  Suspicious unused variable: unused variable that is bound with let or as, and doesn’t start with an underscore (_) character. 
27  Innocuous unused variable: unused variable that is not bound with let nor as, and doesn’t start with an underscore (_) character. 
28  Wildcard pattern given as argument to a constant constructor. 
29  Unescaped end-of-line in a string constant (non-portable code). 
30  Two labels or constructors of the same name are defined in two mutually recursive types. 
31  A module is linked twice in the same executable. 
32  Unused value declaration. 
33  Unused open statement. 
34  Unused type declaration. 
35  Unused for-loop index. 
36  Unused ancestor variable. 
37  Unused constructor. 
38  Unused extension constructor. 
39  Unused rec flag. 
40  Constructor or label name used out of scope. 
41  Ambiguous constructor or label name. 
42  Disambiguated constructor or label name. 
43  Nonoptional label applied as optional. 
44  Open statement shadows an already defined identifier. 
45  Open statement shadows an already defined label or constructor. 
46  Illegal environment variable. 
47  Illegal attribute payload. 
48  Implicit elimination of optional arguments. 
49  Absent cmi file when looking up module alias. 
